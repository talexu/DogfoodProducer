<div class="df-bg">
    <div id="pg" class="d-flex justify-content-center df-progress-container">
        <img id="pg-bar" src="progress-bar.png" width="100%" height="100%" />
        <img src="progress-bar-container.png" class="df-progress-bar" width="100%" height="100%" />
        <img id="boy" class="df-boy" src="boy.png" width="auto" height="100%" />
        <img id="girl" class="df-girl" src="girl.png" width="auto" height="100%" />
    </div>
    <div class="flex">
        <img src="shake.png" width="254" height="209" />
    </div>
    <div id="dogfoods">
    </div>
</div>

<script>
 var df = (() => {
     var _animaPanel = document.getElementById("dogfoods");
     var _dogfoods = [];
     var _dogfood = function dogfood() {
        var _offset = 0;
        var _left = (Math.random() - 0.5) * (window.innerWidth / 1.5);
        var _scale = Math.min(0.9, Math.max(0.5, Math.random()));
        var _rotate = Math.random() * 360;
        var _img = document.createElement("img");
        _img.style.transformOrigin = "50% 50% 0";
        _img.style.transform = `translate3d(${_left}px, ${_offset}px, 0) scale3d(${_scale}, ${_scale}, 1) rotateZ(${_rotate}deg)`;
        _img.onload = () => { _animaPanel.appendChild(_img); }
         _img.src = "dogfood.png";
         /* if (Math.random() > 0.5) { */
         /* _img.src = "dogfood.png"; */
         /* } else { */
         /* _img.src = "dogfood.png"; */
         /* } */
        var _update = () => {
            _offset += 7;
            if (_offset > window.innerHeight + Math.random() * 100) {
                /* _dogfoods = _dogfoods.filter(df => df !== this); */
                /* _animaPanel.removeChild(_img); */
                _update = () => { return }
            } else {
                _img.style.transform = `translate3d(${_left}px, ${_offset}px, 0) scale3d(${_scale}, ${_scale}, 1) rotateZ(${_rotate}deg)`;
            }
        }

        return {
            update: () => { _update(); }
        };
    }

     return {
         appendDogfood: () => {
             _dogfoods.push(new _dogfood());
         },
         update: () => {
             for (var i = 0; i < _dogfoods.length; i++) {
                 _dogfoods[i].update();
             }
         }
     }
 })();

 $(document).ready(() => {
     var _status = "ready";
     var _progress = 0;
     var _pg = document.getElementById("pg");
     _pg.width = window.innerWidth * 142 / 648;

     var _progressBar = document.getElementById("pg-bar");
     _progressBar.style.transformOrigin = "0% 50% 0";

     var _boy = document.getElementById("boy");
     _boy.style.transformOrigin = "100% 50% 0";

     // Animation loop
     function loop() {
         df.update();
         var _offset = (_progress - 100) * 0.7;
         _progressBar.style.transform = `translate3d(${_offset}%, 0px, 0)`;
         _boy.style.transform = `translate3d(${_offset}%, 0px, 0)`;
         requestAnimationFrame(loop);
     }
     requestAnimationFrame(loop);

     // Shake detection
     var myShakeEvent = new Shake({
         threshold: 1, // optional shake strength threshold
         timeout: 500 // optional, determines the frequency of event generation
     });
     myShakeEvent.start();
     window.addEventListener(
         'shake',
         () => {
             df.appendDogfood();
             $.post("/dogfood_factory/increase");
         },
         false
     );

     // Polling
     window.setInterval(() => {
         $.getJSON("/dogfood_factory/status", (data) => {
             _status = data.data;
             _progress = data.progress;
         });
     }, 500);

     $("#dogfoods").click(()=>{
         df.appendDogfood();
         $.post("/dogfood_factory/increase");
     });
 });
</script>
