<div class="progress progress-bar-vertical"">
    <div class="progress-bar bg-danger" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="height: 60%;">
        <span class="sr-only">60% Complete</span>
    </div>
</div>
<div class="flex">
    <img src="shake.png" width="254" height="209" />
</div>
<div id="dogfoods">
</div>

<script>
 var df = (() => {
     var _animaPanel = document.getElementById("dogfoods");
     var _dogfoods = [];
     var _dogfood = function dogfood() {
        var _offset = 0;
        var _left = (Math.random() - 0.5) * (window.innerWidth / 2);
        var _scale = Math.min(0.8, Math.max(0.3, Math.random()));
        var _rotate = Math.random() * 360;
        var _img = document.createElement("img");
        _img.style.transformOrigin = "50% 50% 0";
        _img.style.transform = `translate3d(${_left}px, ${_offset}px, 0) scale3d(${_scale}, ${_scale}, 1) rotateZ(${_rotate}deg)`;
        _img.onload = () => { _animaPanel.appendChild(_img); }
        if (Math.random() > 0.5) {
            _img.src = "dogfood1.png";
        } else {
            _img.src = "dogfood2.png";
        }
        var _update = () => {
            _offset += 7;
            if (_offset > window.innerHeight + 300) {
                _dogfoods = _dogfoods.filter(df => df !== this);
                _animaPanel.removeChild(_img);
                _update = () => { return }
            } else {
                _img.style.transform = `translate3d(${_left}px, ${_offset}px, 0) scale3d(${_scale}, ${_scale}, 1) rotateZ(${_rotate}deg)`;
            }
        }

        return {
            update: () => { _update(); }
        };
    }

     return {
         appendDogfood: () => {
             _dogfoods.push(new _dogfood());
         },
         update: () => {
             for (var i = 0; i < _dogfoods.length; i++) {
                 _dogfoods[i].update();
             }
         }
     }
 })();

 $(document).ready(() => {
     var _status = "ready";
     var _progress = 0;
     var _progressBar = $(".progress-bar");

     // Animation loop
     function loop() {
         df.update();
         _progressBar.attr("aria-valuenow", _progress).css("height", _progress + "%");
         requestAnimationFrame(loop);
     }
     requestAnimationFrame(loop);

     // Shake detection
     var myShakeEvent = new Shake({
         threshold: 1, // optional shake strength threshold
         timeout: 500 // optional, determines the frequency of event generation
     });
     myShakeEvent.start();
     window.addEventListener(
         'shake',
         () => {
             df.appendDogfood();
             $.post("/dogfood_factory/increase");
         },
         false
     );

     // Polling
     window.setInterval(() => {
         $.getJSON("/dogfood_factory/status", (data) => {
             _status = data.data;
             _progress = data.progress;
         });
     }, 1000);

     $("#dogfoods").click(()=>{
         df.appendDogfood();
         $.post("/dogfood_factory/increase");
     });
 });
</script>
